# locks
workflow "locktest":
in:
	in string
out:
	out string;
wfomap:
	out = v.thing;
locks:
	foo bar
	abc def inherit
	slot _ manual
	schloss _ manual inherit
do:
	eval:
		thing = 'got ' . a.in
	lock slot 'sleutel'
	eval:
		thing .= ' and got lock "slot"'
	lock schloss 'schl√ºssel'
	eval:
		thing .= ' and got lock "schloss"'
	wait_for_event:
		timeout = 1.5
	into:
		<event>
	eval:
		thing .= ' and did a nap'
	#unlock slot 'sleutel'
	unlock slot [[ 'sleutel' ]]
	eval:
		thing .= ' and unlocked lock "slot"'
