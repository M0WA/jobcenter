#!/usr/bin/perl

use Mojo::Base -base;
use Mojo::JSON qw(decode_json encode_json);

# standard modules
use Cwd qw(realpath);
use Data::Dumper;
use Encode qw(encode_utf8 decode_utf8);
use FindBin;
use Getopt::Long;

# other
#use Config::Tiny;

# JobCenter
use lib realpath("$FindBin::Bin/../lib");
use JobCenter::MojoClient;

exit main(@ARGV);

sub main {
	if (scalar @_ != 2) {
		die "usage: $0 <wfname> <jsonblob>";
	}

	my ($wfname, $inargs) = @_;

	# hopefully this checks for valid json..
	my $inargsp = decode_json($inargs);

	my $config = realpath("$FindBin::Bin/../etc/jobcenter.conf");

	my $client = JobCenter::MojoClient->new(
		cfgpath => $config,
		debug => 1,
		json => 1,
	);

	die 'no client?' unless $client;

	my ($job_id, $outargs);
	local $@;
	eval { ($job_id, $outargs) = $client->call(
		wfname => $wfname,
		inargs => $inargs,
	); };
	if ($@) {
		say "error: $@";
		return 1;
	}

	if ($job_id) {
		say "job_id: $job_id, outargs: ", decode_utf8($outargs);
	} else {
		say "job not created? $outargs";
	}

	#say "the end is nigh!";
	return 0;
}

1;




