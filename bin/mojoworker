#!/usr/bin/perl

use strict;
use warnings;
use 5.10.0;

# standard modules
use Cwd qw(realpath);
use Data::Dumper;
use FindBin;
use Getopt::Long;

# JobCenter
use lib realpath("$FindBin::Bin/../lib");
use JobCenter::MojoWorker;

exit main(@ARGV);

sub main {
	my $config = realpath("$FindBin::Bin/../etc/jobcenter.conf");
	my $daemon = 1;

	GetOptions(
		'config=s' => \$config,
		'daemon!' => \$daemon,
	) or die "Error in command line arguments\n";

	my $worker = JobCenter::MojoWorker->new(
		cfgpath => $config,
		daemon => $daemon,
		debug => 1,
	);
	die 'no worker?' unless $worker;
	#print Dumper($worker);

	# what can we do
	my @actions = (
		['add', \&do_add],
		['square', \&do_square],
		['div', \&do_div],
	);

	# announce our actions
	for my $action (@actions) {
		my ($actionname, $cb) = @$action;
		# fixme: check results?
		$worker->announce($actionname, $cb);
	}

	$worker->work();

	# withdraw our actions
	for my $action (@actions) {
		my ($actionname, $cb) = @$action;
		$worker->withdraw($actionname);
	}

	say "the end is nigh!" unless $daemon;
	return 0;
}

sub do_add {
	my ($job_id, $vars) = @_;
	my $out = {};
	$out->{counter} = $vars->{counter} + ($vars->{step} || 1);
	return $out;
}

sub do_square {
	my ($job_id, $vars) = @_;
	my $out = {};
	$out->{square} = $vars->{root}**2;
	return $out;
}

sub do_div {
	my ($job_id, $vars) = @_;
	my $out = {};
	$out->{quotient} = $vars->{dividend} / $vars->{divisor};
	return $out;
}

